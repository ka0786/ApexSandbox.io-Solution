public List<Account> getAccounts(List<Account> accounts) {
    if(accounts == null || accounts.isEmpty()) return accounts;
    List<SortableAccount> sortableAccounts = new List<SortableAccount>();
    for (Account acc : accounts) {
        sortableAccounts.add(new SortableAccount(acc));
    }
    sortableAccounts.sort();

    for (Integer i = 0; i < accounts.size(); i++) {
        accounts[i] = sortableAccounts[i].account;
    }
    return accounts;
}
public class SortableAccount implements Comparable {
    private final Account account;
    public SortableAccount(Account account) {
    	this.account = account;
    }
    
    // Compare opportunities based on the opportunity amount.
    public Integer compareTo(Object otherObject) {
        SortableAccount other = (SortableAccount) otherObject;
        if (this.account.AnnualRevenue > other.account.AnnualRevenue) {
            return -1;
        } else if (this.account.AnnualRevenue < other.account.AnnualRevenue) {
            return 1;
        } 
        return 0;
    }
}
